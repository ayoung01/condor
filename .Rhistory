red_indx
eqtl_block
condor.object
brim.object <- condor.object
edges <- brim.object$edges
brim_object <- condor.object
dt0 <- data.table(edges)
setnames(dt0,c("SNP","gene"))
dt1 <- data.table(brim_object$red.memb)
setnames(dt1,c("SNP","red.memb"))
dt2 <- data.table(brim_object$blue.memb)
setnames(dt2,c("gene","blue.memb"))
dt3 <- merge(dt0,dt1,by="SNP",all.x=TRUE)
eqtl_object <- merge(dt3,dt2,by="gene",all.x=TRUE)
setkey(eqtl_object,"SNP")
eqtl_all <- data.table(eqtl_object[!is.na(SNP)])
eqtl_all$SNP <- droplevels(eqtl_all$SNP)
eqtl_all$gene <- droplevels(eqtl_all$gene)
#this groups red and blue nodes in the same community. very important
eqtl_block <- eqtl_all[blue.memb==red.memb]
if(nlevels(eqtl_block$SNP) != length(unique(eqtl_block$SNP))){
print("warning: empty levels in SNP column. This may cause silent issues with plotting.")}
#select all links that connect nodes in the same community
setkey(eqtl_block,"blue.memb","red.memb")
#make new index for each node that will correspond to it's row/col number
red_tmp <- data.table(rindx=1:nlevels(eqtl_block$SNP),SNP=unique(eqtl_block$SNP))
red_indx <- merge(red_tmp,unique(eqtl_block,by="SNP")[,c("SNP","red.memb"),with=FALSE],by="SNP")
red_indx[,red.com.size:=length(unique(SNP)),by=red.memb]
red_indx[red.com.size > 1,rindx:=sample(x=rindx),by=red.memb][,red.memb:=NULL,]
setkey(red_indx,"SNP")
blue_tmp <- data.table(bindx=1:nlevels(eqtl_block$gene),gene=unique(eqtl_block$gene))
blue_indx <- merge(blue_tmp,unique(eqtl_block,by="gene")[,c("gene","blue.memb"),with=FALSE],by="gene")
#shuffle nodes within each community to make density homogeneous
blue_indx[,blue.com.size:=length(unique(gene)),by=blue.memb]
blue_indx[blue.com.size > 1,bindx:=sample(x=bindx),by=blue.memb][,blue.memb:=NULL,]
setkey(blue_indx,"gene")
if(dim(red_indx)[1] != nlevels(eqtl_all$SNP) && dim(blue_indx)[1] != nlevels(eqtl_all$gene)){
print("Warning! not all nodes in block!")
}
#in the unlikely event a node is only connected to nodes in OTHER comms
#if(nlevels(eqtl_all$SNP) != nlevels(eqtl_all$SNP)){
#  tmp = setdiff(levels(eqtl_all$SNP),levels(eqtl_all$SNP))
m1 <- merge(eqtl_all,red_indx,by="SNP",all=TRUE)
#setkey(m1,"gene")
m2 <- merge(m1,blue_indx,by="gene",all=TRUE)
par(mar=c(3,3,3,0.5)+0.1)
#plot links that connect nodes in different communities
m2[red.memb != blue.memb][plot(rindx,bindx,cex=point.size,xaxt="n",yaxt="n",
xaxs="i",yaxs="i",ylim=c(0,max(m2$bindx)+1),
xlim=c(0,max(m2$rindx)+1),xlab="",ylab="",pch=19)]
#plot links that connect nodes in same communities
m2[red.memb==blue.memb][points(rindx,bindx,cex=point.size,pch=19,
col=color_list[red.memb])]
box(lwd=2)
mtext("SNPs",side=3,font=2,cex=2.5,padj=-0.25)
mtext("Genes",side=2,font=2,cex=2.5,padj=-0.5)
## Add community labels to top
cs <- cumsum(rle(sort(m2[!duplicated(SNP)]$red.memb))$lengths)
lens <- rle(sort(m2[!duplicated(SNP)]$red.memb))$lengths
lpts <- cs - lens/2
axis(1,at=lpts,labels=1:length(color_list),lwd.ticks=-0.1,cex.axis=1.25,padj=0.25,font=2)
color_list = c("darkgreen","darkorange")
par(mar=c(3,3,3,0.5)+0.1)
#plot links that connect nodes in different communities
m2[red.memb != blue.memb][plot(rindx,bindx,cex=point.size,xaxt="n",yaxt="n",
xaxs="i",yaxs="i",ylim=c(0,max(m2$bindx)+1),
xlim=c(0,max(m2$rindx)+1),xlab="",ylab="",pch=19)]
#plot links that connect nodes in same communities
m2[red.memb==blue.memb][points(rindx,bindx,cex=point.size,pch=19,
col=color_list[red.memb])]
box(lwd=2)
mtext("SNPs",side=3,font=2,cex=2.5,padj=-0.25)
mtext("Genes",side=2,font=2,cex=2.5,padj=-0.5)
## Add community labels to top
cs <- cumsum(rle(sort(m2[!duplicated(SNP)]$red.memb))$lengths)
lens <- rle(sort(m2[!duplicated(SNP)]$red.memb))$lengths
lpts <- cs - lens/2
axis(1,at=lpts,labels=1:length(color_list),lwd.ticks=-0.1,cex.axis=1.25,padj=0.25,font=2)
point.size=1
par(mar=c(3,3,3,0.5)+0.1)
#plot links that connect nodes in different communities
m2[red.memb != blue.memb][plot(rindx,bindx,cex=point.size,xaxt="n",yaxt="n",
xaxs="i",yaxs="i",ylim=c(0,max(m2$bindx)+1),
xlim=c(0,max(m2$rindx)+1),xlab="",ylab="",pch=19)]
#plot links that connect nodes in same communities
m2[red.memb==blue.memb][points(rindx,bindx,cex=point.size,pch=19,
col=color_list[red.memb])]
box(lwd=2)
mtext("SNPs",side=3,font=2,cex=2.5,padj=-0.25)
mtext("Genes",side=2,font=2,cex=2.5,padj=-0.5)
## Add community labels to top
cs <- cumsum(rle(sort(m2[!duplicated(SNP)]$red.memb))$lengths)
lens <- rle(sort(m2[!duplicated(SNP)]$red.memb))$lengths
lpts <- cs - lens/2
axis(1,at=lpts,labels=1:length(color_list),lwd.ticks=-0.1,cex.axis=1.25,padj=0.25,font=2)
condor.object$edges
condor.object
reds <- paste0("red",1:20)
blues <- paste0("blue",1:20)
blues
rstub <- sample(reds,100,replace=TRUE)
bstub <- sample(blues,100,replace=TRUE)
elist0 <- cbind(rstub,bstub)
head(elist0)
library(igraph)
g0 <- graph.data.frame(elist0)
clusters(g0)
length(unique(rstub))
length(unique(bstub))
write.table(elist0,file="~/Desktop/toy_bipartite39nodes.txt",header=FALSE,quote=FALSE,row.names=FALSE)
write.table(elist0,file="~/Desktop/toy_bipartite39nodes.txt",colnames=FALSE,quote=FALSE,row.names=FALSE)
write.table(elist0,file="~/Desktop/toy_bipartite39nodes.txt",col.names=FALSE,quote=FALSE,row.names=FALSE)
?plot
data.frame(node=unique(elist0[,1]),type=1)
node.att <- data.frame(node=unique(elist0[,1]),type=1)
write.table(node.att,file="~/Desktop/toy_bipartite39nodes_attributes.txt",col.names=FALSE,quote=FALSE,row.names=FALSE)
source('~/Dropbox/brimdev/CONDOR0.99.2/condor.plot.communities.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
condor.plot.communities(condor.object,color_list,point.size=2)
condor.plot.communities(condor.object,color_list,point.size=2,xlab="Guys",ylab="Gals")
condor.object
condor.plot.communities(condor.object,color_list,point.size=2,xlab="Gals",ylab="Guys")
condor.plot.communities(condor.object,color_list,point.size=2,xlab="Gals",ylab="Guys")
condor.plot.communities(condor.object,color_list,point.size=2,xlab="Gals",ylab="Guys")
condor.plot.communities(condor.object,color_list,point.size=2,xlab="Gals",ylab="Guys")
condor.plot.communities(condor.object,color_list,point.size=2,xlab="Gals",ylab="Guys")
condor.plot.communities(condor.object,color_list,point.size=2,xlab="Gals",ylab="Guys")
condor.plot.communities(condor.object,color_list,point.size=2,xlab="Gals",ylab="Guys")
condor.plot.communities(condor.object,color_list,point.size=2,xlab="Gals",ylab="Guys")
condor.plot.communities(condor.object,color_list,point.size=2,xlab="Gals",ylab="Guys")
condor.plot.communities(condor.object,color_list,point.size=2,xlab="Gals",ylab="Guys")
condor.object
source('~/Dropbox/brimdev/CONDOR0.99.2/condor.qscore.R', echo=TRUE)
condor.object <- condor.qscore(condor.object)
condor.object
condor.object$qscores$red.qscore
source('~/Dropbox/brimdev/CONDOR0.99.2/condor.core.enrich.R', echo=TRUE)
q_in_women <- condor.object$qscores$red.qscore
qstats_women <- condor.core.enrich(c("Alice","Mary"),q=q_in,plot.hist=TRUE)
qstats_women <- condor.core.enrich(c("Alice","Mary"),q=q_in_women,plot.hist=TRUE)
qstats_women
qstats_women <- condor.core.enrich(c("Alice","Mary"),q=q_in_women,plot.hist=TRUE,perm=TRUE)
source('~/Dropbox/brimdev/CONDOR0.99.2/condor.core.enrich.R', echo=TRUE)
source('~/Dropbox/brimdev/CONDOR0.99.2/condor.core.enrich.R', echo=TRUE)
qstats_women <- condor.core.enrich(c("Alice","Mary"),q=q_in_women,plot.hist=TRUE,perm=TRUE)
q_in_women
qstats_women <- condor.core.enrich("Mary",q=q_in_women,plot.hist=TRUE,perm=TRUE)
warnings()
qstats_women <- condor.core.enrich(c("Mary","Sue"),q=q_in_women,plot.hist=TRUE,perm=TRUE)
qstats_women <- condor.core.enrich(c("Mary","Sue"),q=q_in_women,plot.hist=TRUE,perm=TRUE)
qstats_women <- condor.core.enrich(c("Mary","Sue"),q=q_in_women,plot.hist=TRUE,perm=TRUE)
ks.test
?ks.test
document()
library(devtools)
document()
document()
document()
document()
system("ls")
?document
document()
document()
document(load_code=getwd())
?document
load_all()
document()
build()
check()
document()
check()
document()
load_all(0
0
load_all()
build()
document()
?roxygen
vignette("roxygen2", package = "roxygen2")
devtools::document()
roxygen2::roxygenise()
roxygen2::roxygenise(".")
?roxygen2::roxgenise
?roxygen2::roxygenise
roxygen2::roxygenise("./")
roxygen2::roxygenise("~/Dropbox/brimdev/CONDOR0.99.2/")
library(roxygen2)
document()
document()
run_examples()
q_in <- condor.object$qscores$red.qscore
q_in
condor.core.enrich(c("Alice","Mary"),q=q_in,perm=TRUE,plot.hist=TRUE)
run_examples()
r = c(1,1,1,2,2,2,3,3,3,4,4);
r = c(1,1,1,2,2,2,3,3,3,4,4);
r = c(1,1,1,2,2,2,3,3,3,4,4);
b = c(1,2,3,1,2,4,2,3,4,3,4);
reds <- c("Alice","Sue","Janine","Mary")
blues <- c("Bob","John","Ed","Hank")
elist <- data.frame(red=reds[r],blue=blues[b])
condor.object <- create.condor.object(elist)
condor.object <- condor.cluster(condor.object)
q_in <- condor.object$qscores$red.qscore
out <- condor.core.enrich(c("Alice","Mary"),q=q_in,perm=TRUE,plot.hist=TRUE)
q_in
condor.object
install()
install()
install()
document()
document()
test()
check()
library(data.table)
check()
check()
check()
check()
run_examples()
check_doc()
?Matrix
?MASS
check()
check()
library(MASS)
install.packages("MASS")
check()
q()
library(devtools)
install_local("../condor")
library(condor)
vignette("condor")
vignette(package="condor")
sum('a')
type('a')
class(mtcars)
class(mtcars$mpg)
class(mtcars$cyl)
View(iris)
class(iris$Species)
is.na(iris$weaf)
is.null(iris$weaf)
message
message("hello world")
?stopifnot
any.na
any(is.na(c(NA,1)))
devtools::document()
devtools::document()
devtools::install_local("../condor")
library(condor)
vignette("condor")
devtools::build_vignettes()
devtools::install_local("../condor")
library(condor)
vignette("condor")
vignette("condor")
devtools::build_vignettes()
remove.packages("condor")
devtools::build_vignettes()
devtools::document()
library(igraph)
r = c(1,1,1,2,2,2,3,3,3,4,4);
b = c(1,2,3,1,2,4,2,3,4,3,4);
reds <- c("Alice","Sue","Janine","Mary")
blues <- c("Bob","John","Ed","Hank")
elist <- data.frame(red=reds[r], blue=blues[b])
condor.object <- create.condor.object(elist)
names(condor.object)
condor.object <- condor.cluster(condor.object)
print(condor.object$red.memb)
print(condor.object$blue.memb)
gtoy = graph.edgelist(as.matrix(elist),directed=FALSE)
set.graph.attribute(gtoy, "layout", layout.kamada.kawai(gtoy))
V(gtoy)[c(reds,blues)]$color <- c(rep("red",4),rep("blue",4))
plot(gtoy,vertex.label.dist=2)
condor.object <- condor.qscore(condor.object)
q_women <- condor.object$qscores$red.qscore
core_stats <- condor.core.enrich(test_nodes=c("Alice","Mary"),
q=q_women,perm=TRUE,plot.hist=TRUE)
data(small1976)
condor.object <- create.condor.object(small1976)
condor.object <- condor.cluster(condor.object, project=F)
condor.plot.heatmap(condor.object)
remove.packages("condor")
build_vignettes(pkg = ".")
devtools::build_vignettes(pkg = ".")
devtools::install_local()
devtools::install_local("../condor")
library(condor)
vignette("condor")
devtools::build_vignettes(pkg = ".")
devtools::document()
devtools::install_local("../condor")
library(condor)
vignette(condor)
vignette('condor')
data(small1976)
condor.object <- create.condor.object(small1976)
condor.object <- condor.cluster(condor.object, project=F)
source('~/Dropbox/Quackenbush/condor/R/create.condor.object.R')
source('~/Dropbox/Quackenbush/condor/R/condor.cluster.R')
source('~/Dropbox/Quackenbush/condor/R/condor.qscore.R')
source('~/Dropbox/Quackenbush/condor/R/condor.plot.heatmap.R')
source('~/Dropbox/Quackenbush/condor/R/condor.modularity.max.R')
data(small1976)
condor.object <- create.condor.object(small1976)
condor.object <- condor.cluster(condor.object, project=F)
library(igraph)
data(small1976)
condor.object <- create.condor.object(small1976)
condor.object <- condor.cluster(condor.object, project=F)
library(Matrix)
data(small1976)
condor.object <- create.condor.object(small1976)
condor.object <- condor.cluster(condor.object, project=F)
condor.plot.heatmap(condor.object)
library(gplots)
data(small1976)
condor.object <- create.condor.object(small1976)
condor.object <- condor.cluster(condor.object, project=T)
condor.plot.heatmap(condor.object)
condor.object <- condor.cluster(condor.object, project=F)
condor.plot.heatmap(condor.object)
condor.object <- condor.qscore(condor.object)
x <- condor.object$qscores
x
View(x)
View(x$blue.qscore)
View(x$red.qscore)
r = c(1,1,1,2,2,2,3,3,3,4,4);
b = c(1,2,3,1,2,4,2,3,4,3,4);
reds <- c("Alice","Sue","Janine","Mary")
blues <- c("Bob","John","Ed","Hank")
elist <- data.frame(red=reds[r], blue=blues[b])
condor.object <- create.condor.object(elist)
condor.object <- condor.cluster(condor.object)
print(condor.object$red.memb)
print(condor.object$blue.memb)
condor.object <- condor.qscore(condor.object)
View(condor.object$qscores$blue.qscore)
View(condor.object$qscores$red.qscore)
source('~/Dropbox/Quackenbush/condor/R/condor.qscore.R')
condor.object <- condor.qscore(condor.object)
source('~/Dropbox/Quackenbush/condor/R/condor.plot.heatmap.R')
esub[,1]
reds
blues
ki
dj
a
A
m
R1
T1
r1
t1
Rtrans
T2
T1
Qjk
Bj
data(small1976)
condor.object <- create.condor.object(small1976)
condor.object <- condor.cluster(condor.object, project=F)
condor.object <- condor.qscore(condor.object)
max(t1[,1])
max(r1,1)
condor.object <- condor.qscore(condor.object)
A
?sparseMatrix
source('~/Dropbox/Quackenbush/condor/R/condor.cluster.R')
source('~/Dropbox/Quackenbush/condor/R/condor.qscore.R')
source('~/Dropbox/Quackenbush/condor/R/condor.qscore.R')
source('~/Dropbox/Quackenbush/condor/R/condor.qscore.R')
source('~/Dropbox/Quackenbush/condor/R/condor.qscore.R')
source('~/Dropbox/Quackenbush/condor/R/condor.qscore.R')
source('~/Dropbox/Quackenbush/condor/R/condor.qscore.R')
source('~/Dropbox/Quackenbush/condor/R/condor.cluster.R')
source('~/Dropbox/Quackenbush/condor/R/create.condor.object.R')
data(small1976)
condor.object <- create.condor.object(small1976)
condor.object <- condor.cluster(condor.object, project=T)
condor.plot.heatmap(condor.object)
source('~/Dropbox/Quackenbush/condor/R/condor.cluster.R')
source('~/Dropbox/Quackenbush/condor/R/condor.cluster.R')
source('~/Dropbox/Quackenbush/condor/R/condor.cluster.R')
data(small1976)
condor.object <- create.condor.object(small1976)
condor.object <- condor.cluster(condor.object, project=F)
condor.object <- condor.qscore(condor.object)
View(condor.object$qscores$red.qscore)
View(condor.object$qscores$blue.qscore)
test <- c(1,1,1,2,2,2,3,4,4)
duplicated(test)
source('~/Dropbox/Quackenbush/condor/R/condor.plot.heatmap.R')
library(devtools)
?build
devtools::document()
source('~/Dropbox/Quackenbush/condor/R/condor.plot.heatmap.R')
source('~/Dropbox/Quackenbush/condor/R/condor.plot.heatmap.R')
library(igraph)
?graph.adjacency
library(condor)
library(igraph)
data(small1976)
condor.object <- create.condor.object(small1976)
condor.object <- condor.cluster(condor.object, project=F)
library(Matrix)
data(small1976)
condor.object <- create.condor.object(small1976)
condor.object <- condor.cluster(condor.object, project=F)
condor.object <- condor.cluster(condor.object, project=T)
source('~/Dropbox/Quackenbush/condor/R/condor.cluster.R')
source('~/Dropbox/Quackenbush/condor/R/condor.cluster.R')
condor.object <- condor.cluster(condor.object, project=T)
source('~/Dropbox/Quackenbush/condor/R/condor.cluster.R')
condor.object <- condor.cluster(condor.object, project=T)
G1
names(G1)
weights(G1)
get.graph.attribute(G1)
?get.graph.attribute
get.graph.attribute(G1, "weight")
edge.attributes(G1)
weights
?graph.adjacency
G1 = graph.adjacency(gM,mode="undirected",weighted=TRUE,diag=FALSE);
View(gm)
View(gM)
gM
dim(gM)
G1 = graph.adjacency(gM,mode="undirected",weighted=TRUE,diag=FALSE);
G1
edge.attributes(G1)
gcc.initialize = simplify(max.component(G1))
gcc.initialize
cs0 = multilevel.community(gcc.initialize, weights=weights)
cs0
weights
gcc.initialize
edge.attributes(gcc.initialize)
weights <- edge.attributes(gcc.initialize)
cs0 = multilevel.community(gcc.initialize, weights=weights)
weights
cs0 = multilevel.community(gcc.initialize, weights=weights)$weight
weights <- edge.attributes(gcc.initialize)$weight
cs0 = multilevel.community(gcc.initialize, weights=weights)$weight
cs0
weights
gcc.initialize
multilevel.community(gcc.initialize, weights=weights)
leading.eigenvector.community(gcc.initialize, weights=weights)
fastgreedy.community(gcc.initialize, weights=weights)
source('~/Dropbox/Quackenbush/condor/R/condor.cluster.R')
condor.object <- condor.cluster(condor.object, project=T)
condor.object <- condor.cluster(condor.object, project=T)
source('~/Dropbox/Quackenbush/condor/R/condor.cluster.R')
condor.object <- condor.cluster(condor.object, project=T)
condor.object <- condor.cluster(condor.object, project=F)
condor.object <- condor.cluster(condor.object, project=T)
source('~/Dropbox/Quackenbush/condor/R/condor.cluster.R')
source('~/Dropbox/Quackenbush/condor/R/condor.cluster.R')
condor.object <- condor.cluster(condor.object, project=T)
condor.object <- condor.cluster(condor.object)
r = c(1,1,1,2,2,2,3,3,3,4,4);
b = c(1,2,3,1,2,4,2,3,4,3,4);
reds <- c("Alice","Sue","Janine","Mary")
blues <- c("Bob","John","Ed","Hank")
elist <- data.frame(red=reds[r], blue=blues[b])
condor.object <- create.condor.object(elist)
condor.object <- condor.cluster(condor.object)
condor.object <- condor.cluster(condor.object, project=F)
condor.object <- condor.cluster(condor.object, project=F)
data(small1976)
condor.object <- create.condor.object(small1976)
condor.object <- condor.cluster(condor.object, project=F)
source('~/Dropbox/Quackenbush/condor/R/condor.cluster.R')
source('~/Dropbox/Quackenbush/condor/R/compare.qscore.R')
devtools::document()
devtools::document()
devtools::document()
build()
devtools::build()
devtools::document()
?compare.qscores
?condor.cluster
?condor.plot.heatmap
devtools::document()
devtools::document()
devtools::document()
devtools::document()
?ks.test
devtools::install_local("../condor")
data(small1967)
data(small1976)
View(small19176)
View(small1976)
lu(small1976$pollinator)
lu(small1976$plant)
dim(small1967)
dim(small1976)
colnames(small1967)
colnames(small1976)
devtools::document()
remove.packages("condor")
install_local("../condor")
devtools::install_local("../condor")
?small1976
devtools::document
devtools::document()
